[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.0.0"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.organization }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"


[tool.poetry.dependencies]
python = "^{{ cookiecutter.min_python_version }}"


[tool.poetry.group.dev.dependencies]
black = "^23.9.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"
pylint = "^2.17.5"
mypy = "^1.5.1"
mypy-extensions = "^1.0.0"
bump-my-version = "^0.11.0"
poetry-dynamic-versioning = "^1.1.0"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
coverage = "^7.3.1"
pytest-html = "^4.0.1"
colorama = "^0.4.6"


[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-multiversion = "^0.2.4"
furo = "^2023.9.10"
sphinx-design = "^0.5.0"
sphinxcontrib-mermaid = "^0.9.2"
sphinxemoji = "^0.2.0"
sphinx-autoapi = "^2.1.1"
sphinx-autodoc-typehints = "^1.24.0"
sphinx-copybutton = "^0.5.2"
myst-parser = "^2.0.0"
pydocstyle = "^6.3.0"
sphinx-togglebutton = "^0.3.2"
sphinxcontrib-bibtex = "^2.6.1"

[tool.bumpversion]
current_version = "0.0.0"
tag = true
commit = true

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
no_regex = false
search = "\\[Unreleased\\]"
replace = "[Unreleased]\n\n## [{new_version}] - {now:%Y-%m-%d}"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
{% raw %}format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base) }}
    {%- else -%}
        {{ serialize_pep440(base, post=distance) }}
    {%- endif -%}
"""{% endraw %}

[tool.poetry-dynamic-versioning.substitution]
patterns = [
    "(^__version__\\s*(?::.*?)?=\\s*['\"])[^'\"]*(['\"])",
]
folders = [
  { path = "conda_poetry_liaison" }
]

[tool.poetry.group.docs.dependencies.myst-nb]
git = "https://github.com/executablebooks/MyST-NB"
rev = "48edb5d852eb73b09eae962c7518045f836633d5"

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0"
]
build-backend = "poetry_dynamic_versioning.backend"


[tool.pylint.messages_control]
# https://pylint.readthedocs.io/en/latest/
good-names = [
  "i",
  "j",
  "e",
  "ex"
]
ignore = ["CVS", "conf.py"]


[tool.black]
# https://github.com/psf/black
target-version = ["py{{ cookiecutter.condensed_dev_python_version }}"]
line-length = {{ cookiecutter.line_length }}
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''


[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = {{ cookiecutter.condensed_dev_python_version }}
line_length = {{ cookiecutter.line_length }}

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true


[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = {{ cookiecutter.condensed_dev_python_version }}
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["{{ cookiecutter.project_name }}", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]


[tool.coverage.run]
source = ["tests"]


[coverage.paths]
source = "{{ cookiecutter.project_name }}"


[coverage.run]
branch = true


[coverage.report]
fail_under = 50
show_missing = true
